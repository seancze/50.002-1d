module shifter (
    input a[16],
    input b[5],
    input alufn[6],
    input inv,
    output out[16]
  ) {

  var b_unsigned;
  sig temp[16];
  
  always {
    out = 0;
    // allow b is be used as shift count
    b_unsigned = $unsigned(b);
    
    // b00 = shift left
    // b01 = shift right
    // b11 = shift right arithmetic
    
    case(alufn[1:0]) {
      // shift left
      b00: temp = a << b_unsigned;
      // shift right
      b01: temp = a >> b_unsigned;
      // shift right arithmetic
      b11: temp = $signed(a) >>> b_unsigned;
      default: temp = a << b_unsigned;
      
      }
    if (inv) {
    out = temp ^ 16b1;}
    else {
      out = temp;
      }
    
  }
}
